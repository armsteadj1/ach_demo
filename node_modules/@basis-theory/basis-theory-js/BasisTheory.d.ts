import { BasisTheoryApplications } from './applications';
import { BasisTheoryAtomic } from './atomic';
import { BasisTheoryAtomicBanks } from './atomic/banks';
import { BasisTheoryAtomicCards } from './atomic/cards';
import type { BasisTheoryElements } from './elements';
import { BasisTheoryEncryptionAdapters } from './encryption/BasisTheoryEncryptionAdapters';
import { BasisTheoryLogs } from './logs';
import { BasisTheoryPermissions } from './permissions';
import { BasisTheoryReactorFormulas } from './reactor-formulas';
import { BasisTheoryReactors } from './reactors';
import { BasisTheoryTenants } from './tenants';
import { BasisTheoryTokens } from './tokens';
import type { BasisTheoryInitOptions } from './types';
export declare class BasisTheory {
    private _initStatus;
    private _initOptions?;
    private _tokens?;
    private _atomic?;
    private _encryption?;
    private _elements?;
    private _applications?;
    private _tenants?;
    private _logs?;
    private _reactorFormulas?;
    private _reactors?;
    private _atomicBanks?;
    private _atomicCards?;
    private _permissions?;
    init(apiKey: string, options?: BasisTheoryInitOptions): Promise<BasisTheory>;
    private loadElements;
    get initOptions(): Required<BasisTheoryInitOptions>;
    get tokens(): BasisTheoryTokens;
    get atomic(): BasisTheoryAtomic;
    get encryption(): BasisTheoryEncryptionAdapters;
    get applications(): BasisTheoryApplications;
    get tenants(): BasisTheoryTenants;
    get logs(): BasisTheoryLogs;
    get reactorFormulas(): BasisTheoryReactorFormulas;
    get reactors(): BasisTheoryReactors;
    get atomicBanks(): BasisTheoryAtomicBanks;
    get atomicCards(): BasisTheoryAtomicCards;
    get permissions(): BasisTheoryPermissions;
    get elements(): BasisTheoryElements;
    set elements(elements: BasisTheoryElements);
}
