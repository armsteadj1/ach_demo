"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BasisTheoryEncryption = void 0;

var _browser = require("./providers/browser");

var _node = require("./providers/node");

class BasisTheoryEncryption {
  constructor(encryptionProvider) {
    switch (encryptionProvider) {
      case 'BROWSER':
        this.adapter = _browser.browserAdapter;
        break;

      case 'NODE':
        this.adapter = _node.nodeAdapter;
        break;

      default:
        throw new Error(`No adapter found for provider name "${encryptionProvider}"`);
    }
  }

  init(encryptionOptions) {
    return this.adapter.init(encryptionOptions);
  } // eslint-disable-next-line accessor-pairs


  get name() {
    return this.adapter.name;
  }

  generateKeys() {
    return this.adapter.generateKeys();
  }

  encrypt(encryptionKey, plainTextData) {
    return this.adapter.encrypt(encryptionKey, plainTextData);
  }

  decrypt(decryptionKey, cipherTextData) {
    return this.adapter.decrypt(decryptionKey, cipherTextData);
  }

}

exports.BasisTheoryEncryption = BasisTheoryEncryption;