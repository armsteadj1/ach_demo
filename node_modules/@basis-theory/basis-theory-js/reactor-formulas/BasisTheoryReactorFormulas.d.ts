import type { ReactorFormula, ReactorFormulaQuery } from './types';
export declare const BasisTheoryReactorFormulas: {
    new (options: import("../service/types").BasisTheoryServiceOptions): {
        readonly client: import("axios").AxiosInstance;
    };
} & (new (...args: any[]) => import("../service/CrudBuilder").ICreate<ReactorFormula, Pick<ReactorFormula, "type" | "name" | "description" | "sourceTokenType" | "icon" | "code" | "configuration" | "requestParameters">>) & (new (...args: any[]) => import("../service/CrudBuilder").IRetrieve<ReactorFormula>) & (new (...args: any[]) => import("../service/CrudBuilder").IUpdate<ReactorFormula, Pick<ReactorFormula, "type" | "name" | "description" | "sourceTokenType" | "icon" | "code" | "configuration" | "requestParameters">>) & (new (...args: any[]) => import("../service/CrudBuilder").IDelete) & (new (...args: any[]) => import("../service/CrudBuilder").IList<ReactorFormula, ReactorFormulaQuery>);
export declare type BasisTheoryReactorFormulas = InstanceType<typeof BasisTheoryReactorFormulas>;
