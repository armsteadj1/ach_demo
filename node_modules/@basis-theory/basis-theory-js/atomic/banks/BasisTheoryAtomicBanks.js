"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BasisTheoryAtomicBanks = void 0;

var _common = require("../../common");

var _service = require("../../service");

var _CrudBuilder = require("../../service/CrudBuilder");

const BasisTheoryAtomicBanks = new _CrudBuilder.CrudBuilder(class BasisTheoryAtomicBanks extends _service.BasisTheoryService {
  constructor(options) {
    const _options = { ...options
    }; // eslint-disable-next-line unicorn/prefer-spread

    _options.transformRequest = [].concat(_common.transformAtomicRequestSnakeCase, options.transformRequest || []); // eslint-disable-next-line unicorn/prefer-spread

    _options.transformResponse = [].concat(_common.transformAtomicResponseCamelCase, options.transformResponse || []);
    super(_options);
  }

  update(id, request, options) {
    return this.client.patch(`/${id}`, request, (0, _common.createRequestConfig)(options)).then(_common.dataExtractor);
  }

  retrieveDecrypted(id, options) {
    return this.client.get(`/${id}/decrypt`, (0, _common.createRequestConfig)(options)).then(_common.dataExtractor);
  }

  react(id, request, options) {
    return this.client.post(`/${id}/react`, request, (0, _common.createRequestConfig)(options, {
      transformRequest: _common.transformAtomicReactionRequestSnakeCase,
      transformResponse: _common.proxyRawResponse
    })).then(_common.dataExtractor);
  }

}).create().retrieve().delete().list().build();
exports.BasisTheoryAtomicBanks = BasisTheoryAtomicBanks;