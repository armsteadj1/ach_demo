import type { BasisTheoryServiceOptions } from '../service';
import type { Reactor, CreateReactorModel, ReactorQuery } from './types';
export declare const BasisTheoryReactors: {
    new (options: BasisTheoryServiceOptions): {
        readonly client: import("axios").AxiosInstance;
    };
} & (new (...args: any[]) => import("../service/CrudBuilder").ICreate<Reactor, CreateReactorModel>) & (new (...args: any[]) => import("../service/CrudBuilder").IRetrieve<Reactor>) & (new (...args: any[]) => import("../service/CrudBuilder").IUpdate<Reactor, Pick<Reactor, "name" | "configuration">>) & (new (...args: any[]) => import("../service/CrudBuilder").IDelete) & (new (...args: any[]) => import("../service/CrudBuilder").IList<Reactor, ReactorQuery>);
export declare type BasisTheoryReactors = InstanceType<typeof BasisTheoryReactors>;
